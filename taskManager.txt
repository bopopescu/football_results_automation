button onclick="AddTask()" id="addTaskButton" class="standardStyle">                 <i class="fas fa-plus"></i>Add Task</button><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">2-team bye bug</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">The Scum have (round 3) a bye along with another team. This causes a bug in detecting when byes occur do to the chosen algorithm in RoundIsABye function. Find a different way to detect if a team has a bye by analysing the text in the parent element<ul class="taskSteps"><li>Analyse a similar function that extracts a parent element and one of it's attributes</li><li>Amend the RoundIsABye function</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 14/3/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Edit HTML option</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Include a feature to edit the HTML and see how it renders in real time so that it doesn't have to be done from within MailChimp<ul class="taskSteps"><li>Display the HTML</li><li>Allow editing</li><li>Re-write the HTML being displayed</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 7/3/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Update team nicknames (TD's -&gt; Pups)</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Update nicknames where required<ul class="taskSteps"><li></li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 7/3/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Distinguish which team forfeited</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Currently if there is a forfeit, a string "(Forfeit) is appended to the match result when displayed but the system doesn't actually know which team forfeited.<ul class="taskSteps"><li>Change the way in which a forfeit is detected</li><li>Encode forfeits more specifically in the teams data structure. Eg uniForfeit or oppositionForfeit rather than just forfeit</li><li>Adjust the display results function accordingly to place the forfeit text after the forfeiting team</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 16/2/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Make the locations a link to Google Maps</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">There already exists a link to a google map for each group location in sportsTG. Extract this link and include it in the displayed results<ul class="taskSteps"><li>Find HTML element holding link in SportsTG</li><li>Extract the url</li><li>Store the url in the teams data structure</li><li>Incorporate the URL in the displaying of results</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 16/2/2019 </div><div class="dateCompleted">Date Completed: 16/2/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Catch errors&nbsp;</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Currently, errors that occur on the server when a teams results are being fetched is resulting in the response never being sent, therefore the client does not know that the team has failed. Try to catch these errors and still send a response that lets the client knows it has failed<ul class="taskSteps"><li>Research try-catch blocks in javascript</li><li>Plan how to indicate a team has failed in the response</li><li>Implement and perform checks on the client side&nbsp;</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 16/2/2019 </div><div class="dateCompleted">Date Completed: 16/2/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Catch failed teams</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Add functionality to catch teams that failed to load their results. At the completion of the GenerateResults process, try again for each of the failed teams. If all teams have failed, don't bother trying any again<ul class="taskSteps"><li>Find a way to encode if a team has failed</li><li>Check the fail condition when server sends response</li><li>Add failed team to a failed teams array</li><li>Run generate results again if failed teams array is not empty</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 11/2/2019 </div><div class="dateCompleted">Date Completed: 16/2/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Enable a js linter into Visual Studio Code</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">A linter will help in catching bugs before code is run and increase quality of code base<ul class="taskSteps"><li>Research what the best linter is</li><li>Work out how to install the add on into vs code</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 11/2/2019 </div><div class="dateCompleted">Date Completed: 11/2/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Account for boundary cases</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">The tool currently does not handle the boundary case of when the system is run before the first round of the year. It should recognise that the current date is before the Round 1 date and therefore skip the past results part<ul class="taskSteps"><li>Figure out where this check should be done</li><li>Capture the current date</li><li>Check if the round date is after the current date</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 6/2/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Before selecting round, check if it is already correct</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">The current process automatically iterates through every round and selects the correct one. However, during the season, it can be expected that a large portion of the time, the correct round will already be selected. It would improve efficiency if this was checked first<ul class="taskSteps"><li>Find the html element that holds the text&nbsp;</li><li>Alternatively, find the option that is currently selected</li><li>If the round is correct, don't re-select</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 5/2/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Fix failing to find competition</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">FindCompetition function in index.js is failing sometimes, not all the time. Work out why this is happening<ul class="taskSteps"><li></li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 5/2/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Expand function that selects minor round or finals</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Currently, the SelectMinorRoundOrFinals function only defaults to the NORMAL SEASON option every time. This should be extended to select the FINALS option if it is flagged in the team data structure<ul class="taskSteps"><li>Finish implementation of the finals option in the index.html page</li><li>Incorporate simple if/else flow control into function to achieve desired round type</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 5/2/2019 </div><div class="dateCompleted">Date Completed: 16/2/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Option to indicate a finals match in the Options Section</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">It needs to be declared if a round is a final or a minor round match. Eg Round 1 could indicate the first minor round match or it could also represent the first finals round<ul class="taskSteps"><li>Add attribute to teams data structure</li><li>Create HTML elements in the 'moreOptionsSection'</li><li>Load in the GUI values when Generate Results is clicked</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 5/2/2019 </div><div class="dateCompleted">Date Completed: 11/2/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Add more content to 'Project' page</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">The current class diagram is of bad quality and more content is required. Would be better to include a process diagram as well as some documentation and background info about the project in general<ul class="taskSteps"><li>Create process diagrams</li><li>Re-do class diagram</li><li>Write documentation - project motivation, general process, outcomes</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 5/2/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Move version control from SVN to Git</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">It would be better if all personal related projects were version controlled using GitHub to increase visibility of project source code.&nbsp;<ul class="taskSteps"><li>Work out how to use git</li><li>Move projects over to GitHub</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 5/2/2019 </div><div class="dateCompleted">Date Completed: 11/2/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Provide option for user to select year</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">There is currently no option for a user to enter the year. This should be incorporated as a part of the 'options' section in the Generate Results page<ul class="taskSteps"><li>Add the HTML element</li><li>Style using CSS</li><li>Have the data loaded into the teams data structure upon click of the 'Generate Results' button</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 3/2/2019 </div><div class="dateCompleted">Date Completed: 11/2/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Create a matching function for team identification</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Teams are represented differently depending on which drop down box is being used. Eg <br>National 1 Plumbing Division 1R<br>vs<br>WOMENS DIVISION 1 RESERVES - NATIONAL 1 PLUMBING<br><br>A function is required which can determine whether an option is a match for a specific team, regardless of the specific format. This should identify the sponsor and the division separately.<br><ul class="taskSteps"><li>Determine diagnostic information&nbsp;</li><li>Change team data structure to accomodate</li><li>Write function</li><li>test</li><li>Replace over current string match</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 28/1/2019 </div><div class="dateCompleted">Date Completed: 3/2/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Create Project html page</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Create the webpage that will be home to the project information such as data structure class diagrams, process flow diagrams, project evolution etc...<ul class="taskSteps"><li>Create html file</li><li>Insert the required &lt;script&gt; headers</li><li>Plan layout of page</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 13/1/2019 </div><div class="dateCompleted">Date Completed: 5/2/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Configure progress bar</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">The progress bar in the logger should appear when a process starts, indicate the progression and then disappear when a process finishes (or should it?)<ul class="taskSteps"><li>Create a static method to increment the progress</li><li>Associate the progress of a process with the length of the bar</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Revise modularity of application</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">It is ideal to abstract functional modules into self-contained classes or files.&nbsp;<ul class="taskSteps"><li>Analyse current structure, decide what should be abstracted</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Assign appropriate adjective to game result</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Game descriptions require a creative/funny/appropriate word to describe who won/lost. This should be done somewhat randomly using word banks designated for specific win/loss margins<ul class="taskSteps"><li>Create the word banks</li><li>Decide on win/loss margin bins to hold word banks in</li><li>Calculate the margin</li><li>Insert a random word from the appropriate bin</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Deduce if a team had a bye</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">If a team has a bye, the display is slightly different in Sporting Pulse. Ensure this is checked&nbsp;<ul class="taskSteps"><li>Determine what structures are diagnostic of a team having a bye</li><li>May be overkill to check this before every search</li><li>Maybe look for a bye if a team isn't found to be playing a game</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Transform short-form date to long</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Sporting pulse displays dates in a condensed, short form. For displaying in the newsletter, it is required to expand these into long-form text<ul class="taskSteps"><li>Create a function to perform the transformation</li><li>Use switch statements for each portion of the date</li><li>Provide some sort of verification function to ensure it worked</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 16/2/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Get ground nicknames from AUFC database</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Similarly to the opposition name nicknames, the ground names should be swapped for the associated nicknames in the AUFC data base<ul class="taskSteps"><li>Refer to team name nickname extraction</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Improve appearance of configurations table</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Table needs improvement to its appearance. Not sure exactly at this stage what should be done. Look at other examples of tables that look nice and importantly read easily<ul class="taskSteps"><li></li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Fix outline formatting issue on Logger</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Thick, white border is present on the logger in the right and bottom edges<ul class="taskSteps"><li>Figure out where it is coming from</li><li>Change CSS</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed:&nbsp;</div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Query AUFC database</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Functionality to exchange the official Sporting Pulse names with the AUFC's nicknames held in the AUFC database<ul class="taskSteps"><li>Open AUFC database</li><li>Log in</li><li>Navigate to opposition search</li><li>Enter opposition name</li><li>Take best match</li><li>It none exists, simplify input and try again</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Navigate sporting pulse using Puppeteer</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">It will be required to navigate the sporting pulse website conditionally based on which team is being searched<ul class="taskSteps"><li>Learn how Sporting Pulse's DOM is structured</li><li>Find where searches need to be made - which drop boxes need to be opened etc</li><li>Navigate to the page holding the fixture for a week and results for a specific game for any arbitrary team</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Integrate more APIs</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Integrate more APIs for learning opportunities<ul class="taskSteps"><li>Google maps - find each oval in Google Maps and provide a link in the HTML displayed. Revise wdc trippy project for google maps integration and functionality to place pins</li><li>May be able to scrape map information from sporting pulse?</li><li>Diagrams API - incorporate some sort of embedded, interactive diagrams. This will likely be required for a diagram with varying levels of abstraction</li><li>more...?</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Matching algorithm between databases</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">The Sporting Pulse database and the AUFC database store the same information differently. Eg: <br>Rostrevor OC vs Rostrevor O.C.&nbsp;<br>Payneham Norwood Union vs Payneham NU<br>In order to find information in the AUFC database, an algorithm needs to be developed that can find 'close matches' if a perfect match is not found. In the event of a close match, the user should be informed<br><ul class="taskSteps"><li>Find occurrences where teams are not stored identically</li><li>Develop iterative string-matching algorithm. Eg try perfect match, alter the search string if nothing is found</li><li>Test algorithm</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Make tasks draggable</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Add the ability to drag a task above/below others. This will allow the ordering to be controlled by the user<ul class="taskSteps"><li>Research 'draggable' functionality - check out W3Schools example</li><li>Add another icon which can be used as the dragging button</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Project evolution</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Provide a section in the Project page that can demonstrate the project's evolution over time. Include screenshots of the first iteration, including output and code. Display on a timeline<ul class="taskSteps"><li></li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Copy HTML output</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Make it easy - 'one click' to copy HTML output so that it can be pasted directly into the code section of MailChimp<ul class="taskSteps"><li>Create 'Save HTML' button</li><li>Incorporate functionality to save the desired HTML to the clipboard when the button is clicked</li><li>If stuck, check out FontAwesome's functionality to save icon HTML by clicking, maybe this function is publicly visible</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 11/2/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Optimise formatting for MailChimp</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Ultimately the output will be included into MailChimp for the newsletter. Collate the output information into inline html and style according to the MailChimp format<ul class="taskSteps"><li>Extract information from data structures into HTML</li><li>Revise the formatting used in MailChimp and style accordingly</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Console colours</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Lots of information is being logged to the console while the web-scraping process runs. Print out the messages with structured colours to make interpretation and scanning easier<ul class="taskSteps"><li>Find codes for console colours</li><li>Declare constant variables in files that log to console</li><li>Include constants/macros into logging messages</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Send objects between server/front end</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Instead of sending a plain string that is required to be interpreted at both ends, find a way to send an object<ul class="taskSteps"><li>Research if possible</li><li>Bundle all request/response information into objects</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Optimise asynchronous web scraping</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">A vast majority of the time for the results to be generated is spent waiting for pages to load from Sporting Pulse. Asynchronous optimisation of the process would likely improve the run time substantially<ul class="taskSteps"><li>Investigate how to best optimise process - this could be better utilisation of asynchronous capability or creating a multi-threaded process</li><li>Change current process</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 11/2/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Extend node.js to send multiple responses</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Currently, the front end sends a request to the server and the server makes a single response. It would be ideal if the server could make many responses while it is working to update the front end on progress<ul class="taskSteps"><li>Research ways of sending multiple responses</li><li>Design a data structure to respond with that will inform the front end that the data should be logged and not interpreted as the result</li><li>Implement into web application and log messages while the server runs</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Find web scraping API - Google's puppeteer</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">An API will be required to do the web scraping (navigating and reading webpages). One will be required that is compatible with a node.js server.<ul class="taskSteps"><li>Research and make a selection from candidate APIs</li><li>Integrate skeleton scraping ability into web application - scrape hello world</li><li>Send the data from the scrape to the front end and display it</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Incorporate jQuery</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Use jQuery to make manipulate of the Document Object Model easier<ul class="taskSteps"><li>Revise WDC assignments on jQuery</li><li>Get the &lt;script&gt; jQuery tag to include in html documents</li><li>Add to all pages and start using jQuery in javascript files</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo         fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea         far fa-lightbulb" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="complete     fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Make header sticky</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Fix header to the top of the window always. It would be ideal to have it still visible even when the page is scrolled down<ul class="taskSteps"><li>Revise display : sticky css property</li><li>Look back at WDC trippy project where it was implemented</li><li>Change css</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea far fa-lightbulb" style="display: none;"></i><i class="complete fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Build node.js express server</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">A server is required to use the web-scraping APIs and handle file system operations. The fastest and safest option will be to replicate an npm server from Web and Database computing&nbsp;<ul class="taskSteps"><li>Revise assignments from WDC relevant to building servers</li><li>Use express to generate the file structure</li><li>Extract the required skeleton code for an npm server</li><li>Integrate with current html/css/javascript pages</li><li>Verify that simple get and post requests can be done successfully</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea far fa-lightbulb" style="display: none;"></i><i class="complete fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Develop process diagrams</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Create diagrams to demonstrate the process of the main functionality of the web application - generation of results. Construct this diagram with varying levels of abstraction<ul class="taskSteps"><li>Research which software will be appropriate to design the diagram in, goal is to have zoomable/suppressible abstraction levels</li><li>Create the diagram</li><li>Incorporate diagram into project page</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: inline-block;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea far fa-lightbulb" style="display: none;"></i><i class="complete fas fa-check" onclick="StatusIconClicked(event)" style="display: none;"></i></div><div class="taskTitle" contenteditable="true">Draw class diagrams</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Generate UML diagrams of major classes so that the central data structures can be visualised<ul class="taskSteps"><li>Revise requirements of data structures</li><li>Develop an object-oriented system to abstract as much data and functionality into meaningful places as possible</li><li>Use Lucid chart to construct diagrams</li><li>Incorporate diagrams into web application - projectInfo.html page</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea far fa-lightbulb" style="display: none;"></i><i class="complete fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Re-design graphical user interface</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">The current GUI looks terrible. A new, visually appealing, easy to use GUI should be developed<ul class="taskSteps"><li>Visually design the interface</li><li>Anticipate future features and requirements that may need flexibility in the GUI to add certain elements/pages</li><li>Research a framework like bootstrap that might make it easier/more robust/resizable</li><li>Develop some standard classes to be used throughout the application</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea far fa-lightbulb" style="display: none;"></i><i class="complete fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Enable downloading of the Logger state</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">If problems arise during a certain generation of results or tests do not pass it should be possible to download and save the information in the Logger so that it can be passed to the developer to analyse and fix<ul class="taskSteps"><li>Find some open source code used to download files</li><li>Extract the html of the Logger which should be saved</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea far fa-lightbulb" style="display: none;"></i><i class="complete fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Create testing framework</div><div id="garbageBin"><i onclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Create a testing framework that will allow testing of the system. Should be able to construct a set of boolean equations that can be all run. Should be able to support different batches of tests eg. GUI, unit, system which and provide some metrics on how many passed/failed<ul class="taskSteps"><li>Create structure to keep track of all tests - array of function pointers?</li><li>Develop method to run all tests and report the results to the Logger</li><li>Include a method used for comparison of values, this will be helpful to output the names of variables that do not match when tests fail</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea far fa-lightbulb" style="display: none;"></i><i class="complete fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Version control</div><div id="garbageBin"><i ondblclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Start version-controlling project. This is important now that critical data is being stored in files. If the files are corrupted or updated incorrectly (very likely), important data could be lost&nbsp;<ul class="taskSteps"><li>Fix svn problem on laptop</li><li>Begin version controlling project</li><li>Embed 'commit' functionality into web application?</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 5/2/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea far fa-lightbulb" style="display: none;"></i><i class="complete fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Save new configurations</div><div id="garbageBin"><i ondblclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Enable the new configurations that are entered to be saved in the .csv file&nbsp;<ul class="taskSteps"><li>Extract all data from table into 'teams' class</li><li>Send teams to server</li><li>Have server write to the csv</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 5/2/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea far fa-lightbulb" style="display: none;"></i><i class="complete fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Create a configurations page</div><div id="garbageBin"><i ondblclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Create a separate page to display and edit the configurable data<ul class="taskSteps"><li>Create new page, load in header and standard styles</li><li>Design table appearance</li><li>Populate table with data read from configuration files whenever page is opened</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea far fa-lightbulb" style="display: none;"></i><i class="complete fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Extract configurable data out of code</div><div id="garbageBin"><i ondblclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">There exists a lot of hard-coded configurable settings. Extract these out into a file/database and load them in when required. This provides the opportunity to change the configuration which will inevitably be required for different seasons<ul class="taskSteps"><li>Identify all configurable data</li><li>Construct a .csv file and input data</li><li>Enable reading of the csv</li><li>Populate data structures when file is read</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea far fa-lightbulb" style="display: none;"></i><i class="complete fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Create Task Manager</div><div id="garbageBin"><i ondblclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Create a task manager that can keep track of tasks that need to be done. Motivation is to capitalise on short time periods of working on project. Breaking the project into small, achievable tasks allows better productivity for short development sessions. Also helps to increase project transparency<ul class="taskSteps"><li>Design visual appearance</li><li>Create HTML template of a task</li><li>Include Add Task button</li><li>Enable the description body to be collapsable</li><li>Implement date created/completed</li><li>Add a status to each task, Eg. urgent, to do, complete</li><li>Save tasks upon leaving the page, load tasks when page is opened</li><li>Enable deletion of tasks</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea far fa-lightbulb" style="display: none;"></i><i class="complete fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Design header</div><div id="garbageBin"><i ondblclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Make a header that can be rendered in any page of the web application. Should be simple and clean and provide links to every page of the application<ul class="taskSteps"><li>Design appearance</li><li>Implement change of colour when hovering on an item in the header</li><li>Enable links to different pages</li><li>Put html into a javascript file that automatically renders upon loading</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea far fa-lightbulb" style="display: none;"></i><i class="complete fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Build Logger</div><div id="garbageBin"><i ondblclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Build a logger capable of accepting messages and displaying them. Make it like an embedded console. Have it print out coloured icons to demonstrate the status of each message. This can be used for an indication of progress and testing<ul class="taskSteps"><li>Make Logger button and div + appear/disappear behaviour</li><li>Create logging method to log messages with specific status</li><li>Make Logger's contents persistent throughout a session</li><li>Include a button to clear the Logger's contents</li><li>Make a progress bar</li><li>Method to print out test header when testing starts</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea far fa-lightbulb" style="display: none;"></i><i class="complete fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Build options section</div><div id="garbageBin"><i ondblclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">Create an options section in the main page, accessible by a button. Section to include a list of teams that have been read from the configurations.csv. Should provide a number input to select which round to get results from and checkboxes to exclude teams<ul class="taskSteps"><li>Button and section div appear/disappear behaviour</li><li>Create HTML template with division, input box and check box</li><li>Set all check boxes to checked on page load</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div><div class="task" draggable="true"><div class="standardStyle taskHeader"><div class="taskStatus"><i class="todo fas fa-folder-plus" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="highPriority fas fa-exclamation" onclick="StatusIconClicked(event)" style="display: none;"></i><i class="idea far fa-lightbulb" style="display: none;"></i><i class="complete fas fa-check" onclick="StatusIconClicked(event)" style="display: inline-block;"></i></div><div class="taskTitle" contenteditable="true">Remove duplicate dates completed</div><div id="garbageBin"><i ondblclick="DeleteTask()" class="far fa-trash-alt"></i></div><div class="moreInfo"><i onclick="MoreInfoIconClicked(event)" class="fas fa-info-circle"></i></div></div><div class="taskBody standardStyle" contenteditable="true" onkeyup="ReplaceListIfDeleted(event)" style="display: none;">When a task's status is changed from completed to something else and then set as completed again, the completed date is appending (not replacing), causing multiple dates.<br><ul class="taskSteps"><li>Use html() instead of append() and re-write "Date Completed" every time</li></ul><br><div class="timeStamp"><div class="dateCreated">Date Created: 10/1/2019 </div><div class="dateCompleted">Date Completed: 10/1/2019 </div></div></div></div>